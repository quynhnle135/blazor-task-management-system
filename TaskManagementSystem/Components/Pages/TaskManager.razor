@page "/tasks"
@rendermode InteractiveServer

<h1 style="color: red;">Task Management System</h1>

<!-- Task Form -->

<EditForm Model=@newTask OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator/>
    <ValidationSummary/>
    
    <div>
        <label for="title">Title:</label>
        <InputText @bind-Value=newTask.Title />
        <ValidationMessage For="@(() => newTask.Title)" />
    </div>

    <div>
        <label for="description">Description:</label>
        <InputText @bind-Value=newTask.Description />
        <ValidationMessage For="@(() => newTask.Description)"/>
    </div>
    
    <div>
        <label for="status">Status:</label>

        <InputSelect @bind-Value=newTask.Status>
            <option value="ToDo">ToDo</option>
            <option value="InProgress">InProgress</option>
            <option value="Done">Done</option>
        </InputSelect>
    </div>

    <div>
        <label for="priority">Priority</label>

        <InputSelect @bind-Value=newTask.Priority>
        <option value="Low">Low</option>
        <option value="Medium">Medium</option>
        <option value="High">High</option>
        </InputSelect>
    </div>
    <button style="color: white; background-color: red; border: none; border-radius: 5px;" type="submit">Add Task</button>
</EditForm>


<!--Display tasks-->

<h3 style="color: blue;"> You have @tasks.Count(t => t.Status == global::TaskStatus.ToDo) task(s) to complete.</h3>
<ul>
    @foreach (var task in tasks.OrderBy(t => t.Status)) {
        <li style="list-style-type: none;">
        @if(task.Status == global::TaskStatus.Done) {
            <span style="color: green; text-decoration: line-through;">@task.Title - @task.Priority</span>
        } else if (task.Status == global::TaskStatus.InProgress || task.Status == global::TaskStatus.ToDo) {
            <input type="checkbox" @onclick="() => MarkAsComplete(task)">
            <span style="color: @(task.Status == global::TaskStatus.ToDo ? "red" : "orange")">@task.Title - @task.Priority</span>
        }
       <button style="border: none; border-radius: 5px; color: blue; font-size: 13px; margin-left: 20px;" @onclick="() => RemoveTask(task)">Remove Task</button>
       </li>
    }
</ul>

@code {
    public TodoTask newTask = new TodoTask();
    public List<TodoTask> tasks = new();

    void HandleValidSubmit() {
        tasks.Add(new TodoTask {
            ID = tasks.Count + 1, 
            Title = newTask.Title,
            Description = newTask.Description,
            Status = newTask.Status,
            Priority = newTask.Priority
        });
    }

    private void RemoveTask(TodoTask task) {
        tasks.Remove(task);
    }

    private void MarkAsComplete(TodoTask task) {
        task.Status = global::TaskStatus.Done;
    }
}