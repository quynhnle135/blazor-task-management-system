@page "/tasks"
@rendermode InteractiveServer

<h1 style="color: red;">Task Management System</h1>

<EditForm Model="@newTask" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div>
        <label for="title">Title:</label>
        <InputText id="title" @bind-Value="newTask.Title" />
        <ValidationMessage For="@(() => newTask.Title)"/>
    </div>

    <div>
        <label for="description">Description:</label>
        <InputText id="description" @bind-Value="newTask.Description"/>
        <ValidationMessage For="@(() => newTask.Description)"/>
    </div>

    <div>
        <label for="status">Status:</label>
        <InputSelect id="status" @bind-Value="newTask.Status">
            <option value="ToDo">ToDo</option>
            <option value="InProgress">InProgress</option>
            <option value="Done">Done</option>
        </InputSelect>
        <ValidationMessage For="@(() => newTask.Status)"/>
    </div>

    <div>
        <label for="priority">Priority:</label>
        <InputSelect id="priority" @bind-Value="newTask.Priority">
            <option value="Low">Low</option>
            <option value="Medium">Medium</option>
            <option value="High">High</option>
        </InputSelect>
        @* <ValidationMessage For="@(() => newTask.Priority)"/> *@
    </div>

    <button style="color: white; background-color: red; border: none; border-radius: 5px;" type="submit">Add Task</button>
</EditForm>

<ul>
    @foreach (var task in tasks) {
        @if(task.Status == global::TaskStatus.Done) {
            <span style="color: green;">@task.Title - @task.Priority - @task.Status</span>
        }
        else if(task.Status == global::TaskStatus.InProgress) {
            <span style="color: orange;">@task.Title - @task.Priority - @task.Status</span>
        } else {
            <span style="color: red;">@task.Title - @task.Priority - @task.Status</span>
        }
        <br>
    }
</ul>


@code {
    public TodoTask newTask = new TodoTask();
    public List<TodoTask> tasks = new();

    private void HandleValidSubmit() {
        tasks.Add(new TodoTask {
            Id = tasks.Count + 1,
            Title = newTask.Title,
            Description = newTask.Description,
            Priority = newTask.Priority,
            Status = newTask.Status
        });

        // Clear the form
        newTask = new TodoTask();
    }
}